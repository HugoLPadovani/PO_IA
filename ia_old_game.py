# -*- coding: utf-8 -*-
"""IA Old Game.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YmU-1ctxTgePrnU6szGEIambhQ24Oky5

#Jogando Jogo da Velha contra uma IA
## O Jogador será o "X"
## A IA será a "O"
"""

def imprimir_tabuleiro(tabuleiro):
    for i in range(3):
        for j in range(3):
            print(" " + tabuleiro[i][j] + " ", end="")
            if j < 2:
                print("|", end="")
        print()
        if i < 2:
            print("-----------")
    print()

def verificar_vitoria(tabuleiro, jogador):
    for i in range(3):
        if all(tabuleiro[i][j] == jogador for j in range(3)):
            return True
        if all(tabuleiro[j][i] == jogador for j in range(3)):
            return True
    if tabuleiro[0][0] == tabuleiro[1][1] == tabuleiro[2][2] == jogador:
        return True
    if tabuleiro[0][2] == tabuleiro[1][1] == tabuleiro[2][0] == jogador:
        return True
    return False

def tabuleiro_cheio(tabuleiro):
    return all(tabuleiro[i][j] != " " for i in range(3) for j in range(3))

def avaliar(tabuleiro):
    if verificar_vitoria(tabuleiro, "X"):
        return -1
    elif verificar_vitoria(tabuleiro, "O"):
        return 1
    elif tabuleiro_cheio(tabuleiro):
        return 0

def minimax(tabuleiro, profundidade, maximizando):
    resultado = avaliar(tabuleiro)

    if resultado is not None:
        return resultado

    if maximizando:
        melhor_pontuacao = float('-inf')
        for i in range(3):
            for j in range(3):
                if tabuleiro[i][j] == " ":
                    tabuleiro[i][j] = "O"
                    pontuacao = minimax(tabuleiro, profundidade + 1, False)
                    tabuleiro[i][j] = " "
                    melhor_pontuacao = max(pontuacao, melhor_pontuacao)
        return melhor_pontuacao
    else:
        pior_pontuacao = float('inf')
        for i in range(3):
            for j in range(3):
                if tabuleiro[i][j] == " ":
                    tabuleiro[i][j] = "X"
                    pontuacao = minimax(tabuleiro, profundidade + 1, True)
                    tabuleiro[i][j] = " "
                    pior_pontuacao = min(pontuacao, pior_pontuacao)
        return pior_pontuacao

def escolher_movimento(tabuleiro):
    melhor_movimento = None
    melhor_pontuacao = float('-inf')

    for i in range(3):
        for j in range(3):
            if tabuleiro[i][j] == " ":
                tabuleiro[i][j] = "O"
                pontuacao = minimax(tabuleiro, 0, False)
                tabuleiro[i][j] = " "

                if pontuacao > melhor_pontuacao:
                    melhor_pontuacao = pontuacao
                    melhor_movimento = (i, j)

    return melhor_movimento

def jogar_jogo_da_velha_com_ia():
    tabuleiro = [[" " for _ in range(3)] for _ in range(3)]

    while True:
        imprimir_tabuleiro(tabuleiro)

        # Vez do jogador
        linha = int(input("Escolha uma linha (0, 1, 2): "))
        coluna = int(input("Escolha uma coluna (0, 1, 2): "))
        if tabuleiro[linha][coluna] == " ":
            tabuleiro[linha][coluna] = "X"
        else:
            print("Esse espaço está ocupado. Tente novamente.")
            continue

        # Verificar se o jogador venceu ou se é um empate
        if verificar_vitoria(tabuleiro, "X"):
            imprimir_tabuleiro(tabuleiro)
            print("Você venceu!")
            break
        elif tabuleiro_cheio(tabuleiro):
            imprimir_tabuleiro(tabuleiro)
            print("Jogo Terminou Empatado!")
            break

        # Vez da IA
        movimento_ia = escolher_movimento(tabuleiro)
        tabuleiro[movimento_ia[0]][movimento_ia[1]] = "O"

        # Verificar se a IA venceu ou se é um empate
        if verificar_vitoria(tabuleiro, "O"):
            imprimir_tabuleiro(tabuleiro)
            print("A IA venceu!")
            break
        elif tabuleiro_cheio(tabuleiro):
            imprimir_tabuleiro(tabuleiro)
            print("Jogo Terminou Empatado!")
            break

if __name__ == "__main__":
    jogar_jogo_da_velha_com_ia()